from config import *
from sending_functions import *
import telebot
import psutil
import time
from keyboards import *
import logging
import platform

bot = telebot.TeleBot(main_token)

logging.basicConfig(filename = 'logs.log',  filemode='a', level = logging.INFO, format = ' %(asctime)s - %(levelname)s - %(message)s', encoding = "UTF-8", datefmt='%d-%b-%y %H:%M:%S')
logging.info('–õ–æ–Ω–≥–ø—É–ª –∑–∞–ø—É—â–µ–Ω...')

# from openvpnclient import OpenVPNClient

# # manually connect and disconnect
# vpn = OpenVPNClient('client.ovpn')
# vpn.connect()
# print('ok')
# # interact with network
# vpn.disconnect()


if time.time() - psutil.boot_time() < 100:
    for id in users:
        try:
            send(id, f'‚ùó–°–µ—Ä–≤–µ—Ä –∑–∞–≥—Ä—É–∂–µ–Ω –≤ –û–° {platform.system()}‚ùó', standart_keyboard)
        except:
            logging.info(f'–ü—Ä–æ–±–ª–µ–º—ã —Å id: {id}')


@bot.message_handler(content_types=["text"])
def send_text(message):
    if message.text.lower() in ['—Å—Ç–∞—Ä—Ç', '–Ω–∞—á–∞—Ç—å', '–ø—Ä–∏–≤–µ—Ç', '/start', 'start']:
        send(message.chat.id, emojize(':robot:'), standart_keyboard)

    elif message.text.lower() in ['—Å—Ç–∞—Ç—É—Å', emojize("ü§ñ —Å—Ç–∞—Ç—É—Å ü§ñ"), '/status']:
        send(message.chat.id, f'–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –û–° <b>{platform.system()}</b>', standart_keyboard)

    elif message.text.lower() in ['–≤—Ä–µ–º—è', emojize("‚è≥ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã ‚è≥"), '/uptime']:
        uptime_seconds = time.time() - psutil.boot_time()
        send(message.chat.id, f'–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç {int(uptime_seconds // 3600)} —á.', standart_keyboard)

    elif message.text.lower() in [(emojize("üìä –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å üìä")), '/monitoring']:
        bot.send_chat_action(message.chat.id, 'typing')
        cpu_percent = psutil.cpu_percent(interval=3)
        memory_percent = psutil.virtual_memory().percent
        send(message.chat.id, f'CPU: {cpu_percent}%, RAM: {memory_percent}%', standart_keyboard)

    elif message.text.lower() in [(emojize("üìä –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å üìä")), '/users']:
        for user in psutil.users():
            send(message.chat.id, f"üë§ {user.name}, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω {int((time.time() - user.started)/60)} –º–∏–Ω. –Ω–∞–∑–∞–¥", standart_keyboard)

    elif message.text.lower() in ['/vpn_key']:
        if message.chat.id in users:
            with open('client.ovpn', 'rb') as document_file:
                send_documents(message.chat.id, document_file, standart_keyboard)
                send(message.chat.id, f'–í–æ—Ç, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ ‚òÄ', standart_keyboard)
        else:
            send(message.chat.id, f'–Ø –≤–∞—Å –Ω–µ –∑–Ω–∞—é... –í–∞—à id –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–∏—Å—Ç–µ–º—É. –Ø –≤–∞–º –Ω–∏—á–µ–≥–æ –Ω–µ –¥–∞–º', standart_keyboard)


def job_longpool():
    bot.infinity_polling()


